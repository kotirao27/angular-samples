package com.sc.easyquote.controller;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class Test1 {

	public static void main(String[] args) {

		int arr[] = {1,2,3};
		int intArr[][] = {{0,2},{1,2},{0,2}};
		
		List<Integer> arrList = new ArrayList<>();
		List<List<Integer>> opList = new ArrayList<>();
		
		for(int i= 0; i<arr.length ;i++){
			arrList.add(arr[i]);
		}
		
		for(int j=0; j<intArr.length;j++){
			List<Integer> innner = new ArrayList<>();
			for(int k =0; k<intArr[j].length; k++){
				innner.add(intArr[j][k]);
			}
			opList.add(innner);
		}
		System.out.println(performOperations(arrList,opList));
		
	}
	private static List<Integer> performOperations(List<Integer> arr , List<List<Integer>> operations) {
		List<Integer> revList = arr;
		for(int i=0;i<operations.size();i++){
			int p1 = operations.get(i).get(0);
			int p2 = operations.get(i).get(1);
			if(p2>p1 && p1>= 0 && p2 >=0){
			revList = reversePosition(revList, p1, p2);
			}
		}
		return revList;
	}
	
	private static List<Integer> reversePosition(List<Integer> arr, int start, int end){
		List<Integer> reverse = new ArrayList<>();
		int st = start;
		reverse.addAll(arr);
		for (int i = end; i >= start; i--) {
			reverse.set(st, arr.get(i));
			st++;
			
		}
		return reverse;
	}
}

